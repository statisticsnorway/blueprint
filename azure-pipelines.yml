# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
      - '*'
  tags:
    include:
      - '*'

resources:
  repositories:
    - repository: templates
      type: github
      name: statisticsnorway/azure-pipelines-templates
      ref: refs/tags/0.0.3
      endpoint: statisticsnorway

# Pipeline will be run on this base image
pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: imageName
    value: 'eu.gcr.io/prod-bip/ssb/dapla/dapla-blueprint'
  - name: repoName
    value: 'prod-bip/ssb/dapla/dapla-blueprint'
  - name:  MAVEN_CACHE_FOLDER
    value: $(Pipeline.Workspace)/.m2/repository
  - name: MAVEN_OPTS
    value: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

# Job which runs mvn test and verify, Sonar Analysis (if branch is master), mvn install,
# builds Docker image, pushes this to GCR and checks for any image vulnerabilities
jobs:
  - template: complete-builds/job-test-integration-coverage-build-gcr.yml@templates
    parameters:
      project: dapla
      imageName: dataset-access

  # Job which pulls the Docker image with the correct tag (image-scan-tag) from GCR, tags this
  # with the git tag, and pushes that back to GCR.
  # The job triggers when any tag was committed to GitHub, which means all tags in
  # the code repo are propagated to the corresponding (newly built) image in GCR.
  - template: docker/docker-tag-for-production.yml@templates
    parameters:
      tagToTag: dataset-access
      gcrImageName: ${{ variables.imageName }}