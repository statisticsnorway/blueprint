openapi: 3.0.0
info:
  title: Blueprint API
  description: >
    The Blueprint service analyses ipybn notebooks in order to facilitate
    headless execution.
  version: 0.0.1
servers:
  - url: 'http://localhost:10170/api/v1'
    description: Local server
  - url: 'https://blueprint.staging-bip-app.ssb.no/api/v1'
    description: Staging server for testing
  - url: 'http://api.example.com/v1'
    description: Production server
paths:
  /repository:
    get:
      summary: Return a list of repositories
      responses:
        '200':
          description: The list of repositories.
          content:
            application/vnd.ssb.blueprint.repository+json:
              schema:
                $ref: '#/components/schemas/Repositories'
            application/json:
              schema:
                $ref: '#/components/schemas/Repositories'
  /repositories/{repoID}/commits:
    summary: List the commits for a repository
    get:
      parameters:
        - $ref: '#/components/parameters/repositoryId'
      responses:
        '200':
          description: The list of commits
          content:
            application/vnd.ssb.blueprint.revision+json:
              schema:
                $ref: '#/components/schemas/Commits'
            application/json:
              schema:
                $ref: '#/components/schemas/Commits'

  /repositories/{repoID}/commits/{commitId}/notebooks:
    summary: List the notebooks for a revision.
    get:
      parameters:
        - $ref: '#/components/parameters/repositoryId'
        - $ref: '#/components/parameters/commitId'
        - name: diff
          description: Use the diff to filter out the notebooks that did not change with the revision.
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: |
            The list of notebooks. Note that the content-type can be used to return a directed aclyclic graph of the
            notebooks.
          content:
            application/vnd.ssb.blueprint.dag+json:
              schema:
                $ref: '#/components/schemas/Graph'
            application/vnd.ssb.blueprint.notebook+json:
              schema:
                $ref: '#/components/schemas/Notebooks'
            application/json:
              schema:
                $ref: '#/components/schemas/Notebooks'

  /repositories/{repoID}/commits/{commitId}/notebooks/{notebookId}:
    summary: Get a notebook.
    get:
      parameters:
        - $ref: '#/components/parameters/repositoryId'
        - $ref: '#/components/parameters/commitId'
        - $ref: '#/components/parameters/notebookId'
      responses:
        '200':
          description: The notebook. Note that one can ask for the actual content of the file with the content type.
          content:
            application/x-ipynb+json:
              schema:
                type: object
            application/vnd.ssb.blueprint.notebook+json:
              schema:
                $ref: '#/components/schemas/Notebook'
            application/json:
              schema:
                $ref: '#/components/schemas/Notebook'

  /repositories/{repoID}/commits/{commitId}/notebooks/{notebookId}/inputs:
    summary: Get a notebook.
    get:
      parameters:
        - $ref: '#/components/parameters/repositoryId'
        - $ref: '#/components/parameters/commitId'
        - $ref: '#/components/parameters/notebookId'
      responses:
        '200':
          description: The input datasets

  /repositories/{repoID}/commits/{commitId}/notebooks/{notebookId}/outputs:
    summary: Get a notebook.
    get:
      parameters:
        - $ref: '#/components/parameters/repositoryId'
        - $ref: '#/components/parameters/commitId'
        - $ref: '#/components/parameters/notebookId'
      responses:
        '200':
          description: The output datasets

  /repositories/{repoID}/commits/{commitId}/notebooks/{notebookId}/previous:
    summary: List the notebooks this notebook depends on.
    get:
      parameters:
        - $ref: '#/components/parameters/repositoryId'
        - $ref: '#/components/parameters/commitId'
        - $ref: '#/components/parameters/notebookId'
      responses:
        '200':
          description: The output datasets

  /repositories/{repoID}/commits/{commitId}/notebooks/{notebookId}/next:
    summary: List the notebooks that depend on this notebook.
    get:
      parameters:
        - $ref: '#/components/parameters/repositoryId'
        - $ref: '#/components/parameters/commitId'
        - $ref: '#/components/parameters/notebookId'
      responses:
        '200':
          description: The output datasets

components:
  parameters:
    repositoryId:
      name: repoID
      in: path
      description: Repository identifier
      required: true
      schema:
        type: string
    notebookId:
      name: notebookId
      in: path
      description: Notebook identifier
      required: true
      schema:
        type: string
    commitId:
      name: commitId
      in: path
      description: Commit identifier
      required: true
      schema:
        type: string
  schemas:
    Repository:
      type: object
      properties:
        id:
          type: string
    Repositories:
      type: array
      items:
        $ref: '#/components/schemas/Repository'
    Graph:
      description: A directed acyclic graph (DAG) of the notebooks.
      properties:
        edges:
          type: array
          items:
            $ref: '#/components/schemas/Dependency'
    Dependency:
      type: object
      properties:
        producer:
          $ref: '#/components/schemas/Notebook'
        consumer:
          $ref: '#/components/schemas/Notebook'
    Commits:
      type: array
      items:
        $ref: '#/components/schemas/Commit'
    Commit:
      type: object
      properties:
        id:
          type: string
    Notebooks:
      type: array
      items:
        $ref: '#/components/schemas/Notebook'
    Notebook:
      type: object
      properties:
        id:
          type: string
    Dataset:
      type: object
      properties:
        id:
          type: string
